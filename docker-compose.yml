version: '3.8'
services:
  orderservice:
    build: 
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./order-service:/orderservice/
      - /orderservice/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=user
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=eventstore
    depends_on:
      mysql:
        condition: service_healthy  # Wait for MySQL to be healthy
      kafka:
        condition: service_started
    
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eventstore
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "user", "--password=password"]
      interval: 10s
      timeout: 5s
      retries: 5
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  mysql_data: